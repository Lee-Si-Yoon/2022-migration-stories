{"version":3,"file":"static/js/721.b1dbb32d.chunk.js","mappings":"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","sources":["components/wanderOBJ.jsx"],"sourcesContent":["import { motion } from \"framer-motion\";\nimport { useLayoutEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Blocker = styled.div`\n  z-index: 99;\n  background-color: rgba(0, 0, 0, 0.6);\n  width: 100vw;\n  height: 100vh;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* justify-content: center; */\n`;\n\nconst StoryWrapper = styled.div`\n  width: 100%;\n  height: 50%;\n  align-self: flex-end;\n  justify-self: flex-end;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Story = styled.p`\n  text-align: center;\n  font-size: 1.5rem;\n  line-height: 160%;\n  max-width: 600px;\n  min-width: 250px;\n  width: 100%;\n  @media screen and (max-width: 575.98px) {\n    width: 80%;\n  }\n`;\n\n// TODO X버튼 높이 지정하기\nconst ButtonWrapper = styled.div`\n  margin-top: 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LinkButton = styled(Link)`\n  background-color: ${(props) => props.theme.colors.text};\n  color: ${(props) => props.theme.colors.background};\n  /* border: 1px solid ${(props) => props.theme.colors.background}; */\n  border: none;\n  border-radius: 0.5rem;\n  font-weight: bold;\n  font-size: 1.25rem;\n  padding: 0 2rem;\n  height: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n`;\nconst CancelButton = styled(motion.button)`\n  margin-top: 2rem;\n  background-color: ${(props) => props.theme.colors.background};\n  color: ${(props) => props.theme.colors.text};\n  border: none;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nconst OBJ = styled(motion.img)`\n  /* position: absolute; */\n  cursor: pointer;\n  z-index: ${(props) => (props.$focus ? 100 : 0)};\n  filter: ${(props) => (props.$focus ? \"brightness(1.5)\" : \"brightness(1)\")};\n`;\n\nconst lerp = (a, b, n) => (1 - n) * a + n * b;\n\nexport default function WanderOBJ({ imgsrc, name, func, text, translation }) {\n  const imgRef = useRef(null);\n  // ANIMATE\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  // STYLING\n  const [opacity, setOpacity] = useState(1);\n  const [durationState, setDuration] = useState(0);\n  // INTERACTIONS\n  const [isPaused, setIsPaused] = useState(true);\n  const [isClicked, setIsClicked] = useState(false);\n  const [focus, setFocus] = useState(false);\n\n  // 화면 벗어났을때 boolean 반환\n  function resetPosition() {\n    let bool = false;\n    if (\n      imgRef.current.getBoundingClientRect().x < 0 - imgRef.current.getBoundingClientRect().width ||\n      imgRef.current.getBoundingClientRect().x > window.innerWidth ||\n      imgRef.current.getBoundingClientRect().y <\n        0 - imgRef.current.getBoundingClientRect().height ||\n      imgRef.current.getBoundingClientRect().y > window.innerHeight\n    ) {\n      let targetPosition = {\n        x: window.innerWidth / 2 - imgRef.current.getBoundingClientRect().width / 2,\n        y: window.innerHeight / 2 - imgRef.current.getBoundingClientRect().height / 2,\n      };\n      bool = true;\n      setOpacity(0);\n      setDuration(0.25);\n      setPosition((pos) => ({\n        x: lerp(pos.x, targetPosition.x, 1),\n        y: lerp(pos.y, targetPosition.y, 1),\n      }));\n      // TODO 이거 안됨, 서서히 생기게 만들기\n      setTimeout(() => {\n        let alpha = 0;\n        let intervalId = 0;\n        function fadeIn() {\n          if (alpha > 1) {\n            alpha = alpha + 0.1;\n            return alpha;\n          } else {\n            clearInterval(intervalId);\n          }\n        }\n        intervalId = setInterval(fadeIn, 25);\n        setOpacity(fadeIn);\n      }, 1000);\n    } else {\n      bool = false;\n    }\n    return { bool };\n  }\n\n  // 모서리 접근시\n  // function nearBorder() {\n  //   if (\n  //     imgRef.current.getBoundingClientRect().x < 0 ||\n  //     imgRef.current.getBoundingClientRect().x >\n  //       window.innerWidth - imgRef.current.getBoundingClientRect().width / 2 ||\n  //     imgRef.current.getBoundingClientRect().y < 0 ||\n  //     imgRef.current.getBoundingClientRect().y >\n  //       window.innerHeight - imgRef.current.getBoundingClientRect().height / 2\n  //   ) {\n  //     // imgRef.current.style.opacity = 0;\n  //     setOpacity(0);\n  //   } else {\n  //     setOpacity(1);\n  //   }\n  // }\n\n  // 기본 렌더\n\n  useLayoutEffect(() => {\n    if (isPaused) {\n      let timerId;\n      let direction = Math.random() * Math.PI * 2;\n      // let turningSpeed = Math.random() - 0.8;\n      let velocity = 0.5 + Math.random() * 1;\n      const f = () => {\n        // resetPosition();\n        if (resetPosition().bool) {\n          direction = Math.random() * Math.PI * 2;\n          // turningSpeed = Math.random() - 0.8;\n          velocity = 0.5 + Math.random() * 1;\n        }\n        // direction = direction + turningSpeed * 0.01;\n        setPosition((pos) => ({\n          x: pos.x + Math.sin(direction) * velocity,\n          y: pos.y + Math.cos(direction) * velocity,\n        }));\n        timerId = requestAnimationFrame(f);\n      };\n\n      timerId = requestAnimationFrame(f);\n      return () => cancelAnimationFrame(timerId);\n    }\n  }, [isPaused]);\n\n  // 클릭시 중앙으로\n  useLayoutEffect(() => {\n    if (isClicked) {\n      setDuration(0);\n      let timerId;\n      let targetPosition = {\n        x: window.innerWidth / 2 - imgRef.current.getBoundingClientRect().width / 2,\n        y: window.innerHeight / 2 - imgRef.current.getBoundingClientRect().height,\n      };\n      const f = () => {\n        setPosition((pos) => ({\n          x: lerp(pos.x, targetPosition.x, 0.05),\n          y: lerp(pos.y, targetPosition.y, 0.05),\n        }));\n        timerId = requestAnimationFrame(f);\n      };\n      timerId = requestAnimationFrame(f);\n      return () => cancelAnimationFrame(timerId);\n    }\n  }, [isClicked]);\n\n  function onClick() {\n    setIsPaused((prev) => !prev);\n    setIsClicked((prev) => !prev);\n    setFocus((prev) => !prev);\n  }\n  function onHover() {\n    if (!focus) {\n      return { scale: 1.1 };\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <div>\n      <OBJ\n        loading=\"lazy\"\n        style={{ position: \"absolute\" }}\n        ref={imgRef}\n        src={imgsrc}\n        alt={name}\n        // TODO mobile 시 작아지도록\n        height={350}\n        transition={{ duration: durationState }}\n        animate={{\n          x: position.x,\n          y: position.y,\n          opacity: opacity,\n        }}\n        onClick={() => {\n          func(onClick);\n        }}\n        $focus={focus}\n        whileHover={onHover}\n      />\n      {isClicked ? (\n        <Blocker>\n          <div style={{ width: \"100%\", height: \"50%\" }}></div>\n          <StoryWrapper>\n            <Story>\n              <div style={{ marginBottom: \"1rem\" }}>\n                {text.split(\"\\n\").map((t) => (\n                  <p style={{ color: \"white\" }}>{t}</p>\n                ))}\n              </div>\n              {translation.split(\"\\n\").map((t) => (\n                <p style={{ fontSize: \"1.2rem\", lineHeight: \"140%\" }}>{t}</p>\n              ))}\n            </Story>\n            <ButtonWrapper>\n              <motion.div\n                whileHover={{\n                  y: -5,\n                  borderRadius: \"1.5rem\",\n                }}\n              >\n                <LinkButton to={`/story/${name}`}>스토리 보기</LinkButton>\n              </motion.div>\n              <CancelButton\n                whileHover={{ y: -5, color: \"rgba(0,0,0,100)\", backgroundColor: \"#999\" }}\n                onClick={() => {\n                  func(onClick);\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth={1.5}\n                  stroke=\"currentColor\"\n                  className=\"w-6 h-6\"\n                >\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </CancelButton>\n            </ButtonWrapper>\n          </StoryWrapper>\n        </Blocker>\n      ) : null}\n    </div>\n  );\n}\n"],"names":["Blocker","styled","StoryWrapper","Story","ButtonWrapper","LinkButton","Link","props","theme","colors","text","background","CancelButton","motion","OBJ","$focus","lerp","a","b","n","WanderOBJ","imgsrc","name","func","translation","imgRef","useRef","useState","x","y","position","setPosition","opacity","setOpacity","durationState","setDuration","isPaused","setIsPaused","isClicked","setIsClicked","focus","setFocus","onClick","prev","useLayoutEffect","timerId","direction","Math","random","PI","velocity","requestAnimationFrame","f","bool","current","getBoundingClientRect","width","window","innerWidth","height","innerHeight","targetPosition","pos","setTimeout","alpha","intervalId","fadeIn","clearInterval","setInterval","resetPosition","sin","cos","cancelAnimationFrame","loading","style","ref","src","alt","transition","duration","animate","whileHover","scale","marginBottom","split","map","t","color","fontSize","lineHeight","borderRadius","to","backgroundColor","xmlns","fill","viewBox","strokeWidth","stroke","className","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}